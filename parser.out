Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLAS
    PUNTO

Grammar

Rule 0     S' -> program
Rule 1     crear_dir_func -> <empty>
Rule 2     definir_programa -> <empty>
Rule 3     delete_directory -> <empty>
Rule 4     return_to_global -> <empty>
Rule 5     program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory
Rule 6     vars_opt -> vars
Rule 7     vars_opt -> empty
Rule 8     tabla_variables_global -> <empty>
Rule 9     vars -> VAR tabla_variables_global vars_1
Rule 10    assign_type_to_vars -> <empty>
Rule 11    vars_1 -> id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1
Rule 12    vars_1 -> empty
Rule 13    declaracion_variable -> <empty>
Rule 14    id -> ID declaracion_variable id_1
Rule 15    id_1 -> COMA id
Rule 16    id_1 -> empty
Rule 17    change_curr_type -> <empty>
Rule 18    type -> INT change_curr_type
Rule 19    type -> FLOAT change_curr_type
Rule 20    funcs_opt -> funcs funcs_opt
Rule 21    funcs_opt -> empty
Rule 22    new_function -> <empty>
Rule 23    create_func_var_table -> <empty>
Rule 24    funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
Rule 25    params -> params_1
Rule 26    params -> empty
Rule 27    parameter_declaration -> <empty>
Rule 28    params_1 -> ID DOSPUNTOS type parameter_declaration params_cycle
Rule 29    params_cycle -> COMA params_1
Rule 30    params_cycle -> empty
Rule 31    body -> CORCHETEIZQ statement_opt CORCHETEDER
Rule 32    statement_opt -> statement statement_opt
Rule 33    statement_opt -> empty
Rule 34    statement -> assign
Rule 35    statement -> condition
Rule 36    statement -> cycle
Rule 37    statement -> f_call
Rule 38    statement -> print
Rule 39    check_if -> <empty>
Rule 40    fill_if -> <empty>
Rule 41    condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if
Rule 42    fill_else -> <empty>
Rule 43    else -> ELSE fill_else body
Rule 44    else -> empty
Rule 45    check_while -> <empty>
Rule 46    fill_while -> <empty>
Rule 47    cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while
Rule 48    f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA
Rule 49    print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA
Rule 50    push_print -> <empty>
Rule 51    push_string -> <empty>
Rule 52    check_for_print -> <empty>
Rule 53    printable -> push_print CTE_STRING push_string check_for_print printable_1
Rule 54    printable -> push_print expresion check_for_print printable_1
Rule 55    printable_1 -> COMA printable
Rule 56    printable_1 -> empty
Rule 57    push_to_pilaO -> <empty>
Rule 58    push_operator -> <empty>
Rule 59    check_for_assign -> <empty>
Rule 60    check_variable -> <empty>
Rule 61    assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA
Rule 62    expresion_opt -> expresion expresion_cycle
Rule 63    expresion_opt -> empty
Rule 64    expresion_cycle -> COMA expresion_opt
Rule 65    expresion_cycle -> empty
Rule 66    check_for_expresion -> <empty>
Rule 67    expresion -> exp expresion_1
Rule 68    expresion_1 -> MENORQUE push_operator exp check_for_expresion
Rule 69    expresion_1 -> MAYORQUE push_operator exp check_for_expresion
Rule 70    expresion_1 -> DIFERENTE push_operator exp check_for_expresion
Rule 71    expresion_1 -> empty
Rule 72    check_for_plus_minus -> <empty>
Rule 73    exp -> termino check_for_plus_minus exp_1
Rule 74    exp_1 -> MINUS push_operator exp
Rule 75    exp_1 -> PLUS push_operator exp
Rule 76    exp_1 -> empty
Rule 77    check_for_mult_div -> <empty>
Rule 78    termino -> factor check_for_mult_div termino_1
Rule 79    termino_1 -> MULT push_operator termino
Rule 80    termino_1 -> DIV push_operator termino
Rule 81    termino_1 -> empty
Rule 82    pop_par -> <empty>
Rule 83    factor -> PARENIZQ push_operator expresion PARENDER pop_par
Rule 84    factor -> MINUS factor_1 push_to_pilaO
Rule 85    factor -> PLUS factor_1 push_to_pilaO
Rule 86    factor -> factor_1 push_to_pilaO
Rule 87    factor_1 -> ID check_variable
Rule 88    factor_1 -> cte
Rule 89    cte -> CTE_INT
Rule 90    cte -> CTE_FLOAT
Rule 91    empty -> <empty>

Terminals, with rules where they appear

BRACKETDER           : 24
BRACKETIZQ           : 24
COMA                 : 15 29 55 64
COMILLAS             : 
CORCHETEDER          : 31
CORCHETEIZQ          : 31
CTE_FLOAT            : 90
CTE_INT              : 89
CTE_STRING           : 53
DIFERENTE            : 70
DIV                  : 80
DO                   : 47
DOSPUNTOS            : 11 28
ELSE                 : 43
END                  : 5
FLOAT                : 19
ID                   : 5 14 24 28 48 61 87
IF                   : 41
IGUAL                : 61
INT                  : 18
MAIN                 : 5
MAYORQUE             : 69
MENORQUE             : 68
MINUS                : 74 84
MULT                 : 79
PARENDER             : 24 41 47 48 49 83
PARENIZQ             : 24 41 47 48 49 83
PLUS                 : 75 85
PRINT                : 49
PROGRAM              : 5
PUNTO                : 
PUNTOCOMA            : 5 11 24 41 47 48 49 61
VAR                  : 9
VOID                 : 24
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

assign               : 34
assign_type_to_vars  : 11
body                 : 5 24 41 43 47
change_curr_type     : 18 19 24
check_for_assign     : 61
check_for_expresion  : 68 69 70
check_for_mult_div   : 78
check_for_plus_minus : 73
check_for_print      : 53 54
check_if             : 41
check_variable       : 61 87
check_while          : 47
condition            : 35
crear_dir_func       : 5
create_func_var_table : 24
cte                  : 88
cycle                : 36
declaracion_variable : 14
definir_programa     : 5
delete_directory     : 5
else                 : 41
empty                : 7 12 16 21 26 30 33 44 56 63 65 71 76 81
exp                  : 67 68 69 70 74 75
exp_1                : 73
expresion            : 41 47 54 61 62 83
expresion_1          : 67
expresion_cycle      : 62
expresion_opt        : 48 64
f_call               : 37
factor               : 78
factor_1             : 84 85 86
fill_else            : 43
fill_if              : 41
fill_while           : 47
funcs                : 20
funcs_opt            : 5 20
id                   : 11 15
id_1                 : 14
new_function         : 24
parameter_declaration : 28
params               : 24
params_1             : 25 29
params_cycle         : 28
pop_par              : 83
print                : 38
printable            : 49 55
printable_1          : 53 54
program              : 0
push_operator        : 61 68 69 70 74 75 79 80 83
push_print           : 53 54
push_string          : 53
push_to_pilaO        : 61 84 85 86
return_to_global     : 5
statement            : 32
statement_opt        : 31 32
tabla_variables_global : 9
termino              : 73 79 80
termino_1            : 78
type                 : 11 28
vars                 : 6
vars_1               : 9 11
vars_opt             : 5 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (5) program -> . PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (5) program -> PROGRAM . crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory
    (1) crear_dir_func -> .

    ID              reduce using rule 1 (crear_dir_func -> .)

    crear_dir_func                 shift and go to state 3

state 3

    (5) program -> PROGRAM crear_dir_func . ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory

    ID              shift and go to state 4


state 4

    (5) program -> PROGRAM crear_dir_func ID . definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory
    (2) definir_programa -> .

    PUNTOCOMA       reduce using rule 2 (definir_programa -> .)

    definir_programa               shift and go to state 5

state 5

    (5) program -> PROGRAM crear_dir_func ID definir_programa . PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory

    PUNTOCOMA       shift and go to state 6


state 6

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA . vars_opt funcs_opt MAIN return_to_global body END delete_directory
    (6) vars_opt -> . vars
    (7) vars_opt -> . empty
    (9) vars -> . VAR tabla_variables_global vars_1
    (91) empty -> .

    VAR             shift and go to state 10
    VOID            reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)

    vars_opt                       shift and go to state 7
    vars                           shift and go to state 8
    empty                          shift and go to state 9

state 7

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt . funcs_opt MAIN return_to_global body END delete_directory
    (20) funcs_opt -> . funcs funcs_opt
    (21) funcs_opt -> . empty
    (24) funcs -> . VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
    (91) empty -> .

    VOID            shift and go to state 14
    MAIN            reduce using rule 91 (empty -> .)

    funcs_opt                      shift and go to state 11
    funcs                          shift and go to state 12
    empty                          shift and go to state 13

state 8

    (6) vars_opt -> vars .

    VOID            reduce using rule 6 (vars_opt -> vars .)
    MAIN            reduce using rule 6 (vars_opt -> vars .)
    CORCHETEIZQ     reduce using rule 6 (vars_opt -> vars .)


state 9

    (7) vars_opt -> empty .

    VOID            reduce using rule 7 (vars_opt -> empty .)
    MAIN            reduce using rule 7 (vars_opt -> empty .)
    CORCHETEIZQ     reduce using rule 7 (vars_opt -> empty .)


state 10

    (9) vars -> VAR . tabla_variables_global vars_1
    (8) tabla_variables_global -> .

    ID              reduce using rule 8 (tabla_variables_global -> .)
    VOID            reduce using rule 8 (tabla_variables_global -> .)
    MAIN            reduce using rule 8 (tabla_variables_global -> .)
    CORCHETEIZQ     reduce using rule 8 (tabla_variables_global -> .)

    tabla_variables_global         shift and go to state 15

state 11

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt . MAIN return_to_global body END delete_directory

    MAIN            shift and go to state 16


state 12

    (20) funcs_opt -> funcs . funcs_opt
    (20) funcs_opt -> . funcs funcs_opt
    (21) funcs_opt -> . empty
    (24) funcs -> . VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
    (91) empty -> .

    VOID            shift and go to state 14
    MAIN            reduce using rule 91 (empty -> .)

    funcs                          shift and go to state 12
    funcs_opt                      shift and go to state 17
    empty                          shift and go to state 13

state 13

    (21) funcs_opt -> empty .

    MAIN            reduce using rule 21 (funcs_opt -> empty .)


state 14

    (24) funcs -> VOID . change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
    (17) change_curr_type -> .

    ID              reduce using rule 17 (change_curr_type -> .)

    change_curr_type               shift and go to state 18

state 15

    (9) vars -> VAR tabla_variables_global . vars_1
    (11) vars_1 -> . id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1
    (12) vars_1 -> . empty
    (14) id -> . ID declaracion_variable id_1
    (91) empty -> .

    ID              shift and go to state 22
    VOID            reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)
    CORCHETEIZQ     reduce using rule 91 (empty -> .)

    vars_1                         shift and go to state 19
    id                             shift and go to state 20
    empty                          shift and go to state 21

state 16

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN . return_to_global body END delete_directory
    (4) return_to_global -> .

    CORCHETEIZQ     reduce using rule 4 (return_to_global -> .)

    return_to_global               shift and go to state 23

state 17

    (20) funcs_opt -> funcs funcs_opt .

    MAIN            reduce using rule 20 (funcs_opt -> funcs funcs_opt .)


state 18

    (24) funcs -> VOID change_curr_type . ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA

    ID              shift and go to state 24


state 19

    (9) vars -> VAR tabla_variables_global vars_1 .

    VOID            reduce using rule 9 (vars -> VAR tabla_variables_global vars_1 .)
    MAIN            reduce using rule 9 (vars -> VAR tabla_variables_global vars_1 .)
    CORCHETEIZQ     reduce using rule 9 (vars -> VAR tabla_variables_global vars_1 .)


state 20

    (11) vars_1 -> id . DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1

    DOSPUNTOS       shift and go to state 25


state 21

    (12) vars_1 -> empty .

    VOID            reduce using rule 12 (vars_1 -> empty .)
    MAIN            reduce using rule 12 (vars_1 -> empty .)
    CORCHETEIZQ     reduce using rule 12 (vars_1 -> empty .)


state 22

    (14) id -> ID . declaracion_variable id_1
    (13) declaracion_variable -> .

    COMA            reduce using rule 13 (declaracion_variable -> .)
    DOSPUNTOS       reduce using rule 13 (declaracion_variable -> .)

    declaracion_variable           shift and go to state 26

state 23

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global . body END delete_directory
    (31) body -> . CORCHETEIZQ statement_opt CORCHETEDER

    CORCHETEIZQ     shift and go to state 28

    body                           shift and go to state 27

state 24

    (24) funcs -> VOID change_curr_type ID . new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
    (22) new_function -> .

    PARENIZQ        reduce using rule 22 (new_function -> .)

    new_function                   shift and go to state 29

state 25

    (11) vars_1 -> id DOSPUNTOS . type PUNTOCOMA assign_type_to_vars vars_1
    (18) type -> . INT change_curr_type
    (19) type -> . FLOAT change_curr_type

    INT             shift and go to state 31
    FLOAT           shift and go to state 32

    type                           shift and go to state 30

state 26

    (14) id -> ID declaracion_variable . id_1
    (15) id_1 -> . COMA id
    (16) id_1 -> . empty
    (91) empty -> .

    COMA            shift and go to state 34
    DOSPUNTOS       reduce using rule 91 (empty -> .)

    id_1                           shift and go to state 33
    empty                          shift and go to state 35

state 27

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body . END delete_directory

    END             shift and go to state 36


state 28

    (31) body -> CORCHETEIZQ . statement_opt CORCHETEDER
    (32) statement_opt -> . statement statement_opt
    (33) statement_opt -> . empty
    (34) statement -> . assign
    (35) statement -> . condition
    (36) statement -> . cycle
    (37) statement -> . f_call
    (38) statement -> . print
    (91) empty -> .
    (61) assign -> . ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA
    (41) condition -> . IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if
    (47) cycle -> . DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while
    (48) f_call -> . ID PARENIZQ expresion_opt PARENDER PUNTOCOMA
    (49) print -> . PRINT PARENIZQ printable PARENDER PUNTOCOMA

    CORCHETEDER     reduce using rule 91 (empty -> .)
    ID              shift and go to state 45
    IF              shift and go to state 46
    DO              shift and go to state 47
    PRINT           shift and go to state 48

    statement_opt                  shift and go to state 37
    statement                      shift and go to state 38
    empty                          shift and go to state 39
    assign                         shift and go to state 40
    condition                      shift and go to state 41
    cycle                          shift and go to state 42
    f_call                         shift and go to state 43
    print                          shift and go to state 44

state 29

    (24) funcs -> VOID change_curr_type ID new_function . PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA

    PARENIZQ        shift and go to state 49


state 30

    (11) vars_1 -> id DOSPUNTOS type . PUNTOCOMA assign_type_to_vars vars_1

    PUNTOCOMA       shift and go to state 50


state 31

    (18) type -> INT . change_curr_type
    (17) change_curr_type -> .

    PUNTOCOMA       reduce using rule 17 (change_curr_type -> .)
    COMA            reduce using rule 17 (change_curr_type -> .)
    PARENDER        reduce using rule 17 (change_curr_type -> .)

    change_curr_type               shift and go to state 51

state 32

    (19) type -> FLOAT . change_curr_type
    (17) change_curr_type -> .

    PUNTOCOMA       reduce using rule 17 (change_curr_type -> .)
    COMA            reduce using rule 17 (change_curr_type -> .)
    PARENDER        reduce using rule 17 (change_curr_type -> .)

    change_curr_type               shift and go to state 52

state 33

    (14) id -> ID declaracion_variable id_1 .

    DOSPUNTOS       reduce using rule 14 (id -> ID declaracion_variable id_1 .)


state 34

    (15) id_1 -> COMA . id
    (14) id -> . ID declaracion_variable id_1

    ID              shift and go to state 22

    id                             shift and go to state 53

state 35

    (16) id_1 -> empty .

    DOSPUNTOS       reduce using rule 16 (id_1 -> empty .)


state 36

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END . delete_directory
    (3) delete_directory -> .

    $end            reduce using rule 3 (delete_directory -> .)

    delete_directory               shift and go to state 54

state 37

    (31) body -> CORCHETEIZQ statement_opt . CORCHETEDER

    CORCHETEDER     shift and go to state 55


state 38

    (32) statement_opt -> statement . statement_opt
    (32) statement_opt -> . statement statement_opt
    (33) statement_opt -> . empty
    (34) statement -> . assign
    (35) statement -> . condition
    (36) statement -> . cycle
    (37) statement -> . f_call
    (38) statement -> . print
    (91) empty -> .
    (61) assign -> . ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA
    (41) condition -> . IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if
    (47) cycle -> . DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while
    (48) f_call -> . ID PARENIZQ expresion_opt PARENDER PUNTOCOMA
    (49) print -> . PRINT PARENIZQ printable PARENDER PUNTOCOMA

    CORCHETEDER     reduce using rule 91 (empty -> .)
    ID              shift and go to state 45
    IF              shift and go to state 46
    DO              shift and go to state 47
    PRINT           shift and go to state 48

    statement                      shift and go to state 38
    statement_opt                  shift and go to state 56
    empty                          shift and go to state 39
    assign                         shift and go to state 40
    condition                      shift and go to state 41
    cycle                          shift and go to state 42
    f_call                         shift and go to state 43
    print                          shift and go to state 44

state 39

    (33) statement_opt -> empty .

    CORCHETEDER     reduce using rule 33 (statement_opt -> empty .)


state 40

    (34) statement -> assign .

    ID              reduce using rule 34 (statement -> assign .)
    IF              reduce using rule 34 (statement -> assign .)
    DO              reduce using rule 34 (statement -> assign .)
    PRINT           reduce using rule 34 (statement -> assign .)
    CORCHETEDER     reduce using rule 34 (statement -> assign .)


state 41

    (35) statement -> condition .

    ID              reduce using rule 35 (statement -> condition .)
    IF              reduce using rule 35 (statement -> condition .)
    DO              reduce using rule 35 (statement -> condition .)
    PRINT           reduce using rule 35 (statement -> condition .)
    CORCHETEDER     reduce using rule 35 (statement -> condition .)


state 42

    (36) statement -> cycle .

    ID              reduce using rule 36 (statement -> cycle .)
    IF              reduce using rule 36 (statement -> cycle .)
    DO              reduce using rule 36 (statement -> cycle .)
    PRINT           reduce using rule 36 (statement -> cycle .)
    CORCHETEDER     reduce using rule 36 (statement -> cycle .)


state 43

    (37) statement -> f_call .

    ID              reduce using rule 37 (statement -> f_call .)
    IF              reduce using rule 37 (statement -> f_call .)
    DO              reduce using rule 37 (statement -> f_call .)
    PRINT           reduce using rule 37 (statement -> f_call .)
    CORCHETEDER     reduce using rule 37 (statement -> f_call .)


state 44

    (38) statement -> print .

    ID              reduce using rule 38 (statement -> print .)
    IF              reduce using rule 38 (statement -> print .)
    DO              reduce using rule 38 (statement -> print .)
    PRINT           reduce using rule 38 (statement -> print .)
    CORCHETEDER     reduce using rule 38 (statement -> print .)


state 45

    (61) assign -> ID . check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA
    (48) f_call -> ID . PARENIZQ expresion_opt PARENDER PUNTOCOMA
    (60) check_variable -> .

    PARENIZQ        shift and go to state 58
    IGUAL           reduce using rule 60 (check_variable -> .)

    check_variable                 shift and go to state 57

state 46

    (41) condition -> IF . PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if

    PARENIZQ        shift and go to state 59


state 47

    (47) cycle -> DO . check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while
    (45) check_while -> .

    CORCHETEIZQ     reduce using rule 45 (check_while -> .)

    check_while                    shift and go to state 60

state 48

    (49) print -> PRINT . PARENIZQ printable PARENDER PUNTOCOMA

    PARENIZQ        shift and go to state 61


state 49

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ . create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
    (23) create_func_var_table -> .

    ID              reduce using rule 23 (create_func_var_table -> .)
    PARENDER        reduce using rule 23 (create_func_var_table -> .)

    create_func_var_table          shift and go to state 62

state 50

    (11) vars_1 -> id DOSPUNTOS type PUNTOCOMA . assign_type_to_vars vars_1
    (10) assign_type_to_vars -> .

    ID              reduce using rule 10 (assign_type_to_vars -> .)
    VOID            reduce using rule 10 (assign_type_to_vars -> .)
    MAIN            reduce using rule 10 (assign_type_to_vars -> .)
    CORCHETEIZQ     reduce using rule 10 (assign_type_to_vars -> .)

    assign_type_to_vars            shift and go to state 63

state 51

    (18) type -> INT change_curr_type .

    PUNTOCOMA       reduce using rule 18 (type -> INT change_curr_type .)
    COMA            reduce using rule 18 (type -> INT change_curr_type .)
    PARENDER        reduce using rule 18 (type -> INT change_curr_type .)


state 52

    (19) type -> FLOAT change_curr_type .

    PUNTOCOMA       reduce using rule 19 (type -> FLOAT change_curr_type .)
    COMA            reduce using rule 19 (type -> FLOAT change_curr_type .)
    PARENDER        reduce using rule 19 (type -> FLOAT change_curr_type .)


state 53

    (15) id_1 -> COMA id .

    DOSPUNTOS       reduce using rule 15 (id_1 -> COMA id .)


state 54

    (5) program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory .

    $end            reduce using rule 5 (program -> PROGRAM crear_dir_func ID definir_programa PUNTOCOMA vars_opt funcs_opt MAIN return_to_global body END delete_directory .)


state 55

    (31) body -> CORCHETEIZQ statement_opt CORCHETEDER .

    END             reduce using rule 31 (body -> CORCHETEIZQ statement_opt CORCHETEDER .)
    WHILE           reduce using rule 31 (body -> CORCHETEIZQ statement_opt CORCHETEDER .)
    ELSE            reduce using rule 31 (body -> CORCHETEIZQ statement_opt CORCHETEDER .)
    PUNTOCOMA       reduce using rule 31 (body -> CORCHETEIZQ statement_opt CORCHETEDER .)
    BRACKETDER      reduce using rule 31 (body -> CORCHETEIZQ statement_opt CORCHETEDER .)


state 56

    (32) statement_opt -> statement statement_opt .

    CORCHETEDER     reduce using rule 32 (statement_opt -> statement statement_opt .)


state 57

    (61) assign -> ID check_variable . push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA
    (57) push_to_pilaO -> .

    IGUAL           reduce using rule 57 (push_to_pilaO -> .)

    push_to_pilaO                  shift and go to state 64

state 58

    (48) f_call -> ID PARENIZQ . expresion_opt PARENDER PUNTOCOMA
    (62) expresion_opt -> . expresion expresion_cycle
    (63) expresion_opt -> . empty
    (67) expresion -> . exp expresion_1
    (91) empty -> .
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENDER        reduce using rule 91 (empty -> .)
    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion_opt                  shift and go to state 67
    expresion                      shift and go to state 68
    empty                          shift and go to state 69
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 59

    (41) condition -> IF PARENIZQ . expresion PARENDER check_if body else PUNTOCOMA fill_if
    (67) expresion -> . exp expresion_1
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion                      shift and go to state 79
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 60

    (47) cycle -> DO check_while . body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while
    (31) body -> . CORCHETEIZQ statement_opt CORCHETEDER

    CORCHETEIZQ     shift and go to state 28

    body                           shift and go to state 80

state 61

    (49) print -> PRINT PARENIZQ . printable PARENDER PUNTOCOMA
    (53) printable -> . push_print CTE_STRING push_string check_for_print printable_1
    (54) printable -> . push_print expresion check_for_print printable_1
    (50) push_print -> .

    CTE_STRING      reduce using rule 50 (push_print -> .)
    PARENIZQ        reduce using rule 50 (push_print -> .)
    MINUS           reduce using rule 50 (push_print -> .)
    PLUS            reduce using rule 50 (push_print -> .)
    ID              reduce using rule 50 (push_print -> .)
    CTE_INT         reduce using rule 50 (push_print -> .)
    CTE_FLOAT       reduce using rule 50 (push_print -> .)

    printable                      shift and go to state 81
    push_print                     shift and go to state 82

state 62

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table . params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA
    (25) params -> . params_1
    (26) params -> . empty
    (28) params_1 -> . ID DOSPUNTOS type parameter_declaration params_cycle
    (91) empty -> .

    ID              shift and go to state 83
    PARENDER        reduce using rule 91 (empty -> .)

    params                         shift and go to state 84
    params_1                       shift and go to state 85
    empty                          shift and go to state 86

state 63

    (11) vars_1 -> id DOSPUNTOS type PUNTOCOMA assign_type_to_vars . vars_1
    (11) vars_1 -> . id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1
    (12) vars_1 -> . empty
    (14) id -> . ID declaracion_variable id_1
    (91) empty -> .

    ID              shift and go to state 22
    VOID            reduce using rule 91 (empty -> .)
    MAIN            reduce using rule 91 (empty -> .)
    CORCHETEIZQ     reduce using rule 91 (empty -> .)

    id                             shift and go to state 20
    vars_1                         shift and go to state 87
    empty                          shift and go to state 21

state 64

    (61) assign -> ID check_variable push_to_pilaO . IGUAL push_operator expresion check_for_assign PUNTOCOMA

    IGUAL           shift and go to state 88


state 65

    (87) factor_1 -> ID . check_variable
    (60) check_variable -> .

    MULT            reduce using rule 60 (check_variable -> .)
    DIV             reduce using rule 60 (check_variable -> .)
    MINUS           reduce using rule 60 (check_variable -> .)
    PLUS            reduce using rule 60 (check_variable -> .)
    MENORQUE        reduce using rule 60 (check_variable -> .)
    MAYORQUE        reduce using rule 60 (check_variable -> .)
    DIFERENTE       reduce using rule 60 (check_variable -> .)
    COMA            reduce using rule 60 (check_variable -> .)
    PARENDER        reduce using rule 60 (check_variable -> .)
    PUNTOCOMA       reduce using rule 60 (check_variable -> .)

    check_variable                 shift and go to state 89

state 66

    (83) factor -> PARENIZQ . push_operator expresion PARENDER pop_par
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 90

state 67

    (48) f_call -> ID PARENIZQ expresion_opt . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 91


state 68

    (62) expresion_opt -> expresion . expresion_cycle
    (64) expresion_cycle -> . COMA expresion_opt
    (65) expresion_cycle -> . empty
    (91) empty -> .

    COMA            shift and go to state 93
    PARENDER        reduce using rule 91 (empty -> .)

    expresion_cycle                shift and go to state 92
    empty                          shift and go to state 94

state 69

    (63) expresion_opt -> empty .

    PARENDER        reduce using rule 63 (expresion_opt -> empty .)


state 70

    (67) expresion -> exp . expresion_1
    (68) expresion_1 -> . MENORQUE push_operator exp check_for_expresion
    (69) expresion_1 -> . MAYORQUE push_operator exp check_for_expresion
    (70) expresion_1 -> . DIFERENTE push_operator exp check_for_expresion
    (71) expresion_1 -> . empty
    (91) empty -> .

    MENORQUE        shift and go to state 96
    MAYORQUE        shift and go to state 97
    DIFERENTE       shift and go to state 98
    COMA            reduce using rule 91 (empty -> .)
    PARENDER        reduce using rule 91 (empty -> .)
    PUNTOCOMA       reduce using rule 91 (empty -> .)

    expresion_1                    shift and go to state 95
    empty                          shift and go to state 99

state 71

    (73) exp -> termino . check_for_plus_minus exp_1
    (72) check_for_plus_minus -> .

    MINUS           reduce using rule 72 (check_for_plus_minus -> .)
    PLUS            reduce using rule 72 (check_for_plus_minus -> .)
    MENORQUE        reduce using rule 72 (check_for_plus_minus -> .)
    MAYORQUE        reduce using rule 72 (check_for_plus_minus -> .)
    DIFERENTE       reduce using rule 72 (check_for_plus_minus -> .)
    COMA            reduce using rule 72 (check_for_plus_minus -> .)
    PARENDER        reduce using rule 72 (check_for_plus_minus -> .)
    PUNTOCOMA       reduce using rule 72 (check_for_plus_minus -> .)

    check_for_plus_minus           shift and go to state 100

state 72

    (78) termino -> factor . check_for_mult_div termino_1
    (77) check_for_mult_div -> .

    MULT            reduce using rule 77 (check_for_mult_div -> .)
    DIV             reduce using rule 77 (check_for_mult_div -> .)
    MINUS           reduce using rule 77 (check_for_mult_div -> .)
    PLUS            reduce using rule 77 (check_for_mult_div -> .)
    MENORQUE        reduce using rule 77 (check_for_mult_div -> .)
    MAYORQUE        reduce using rule 77 (check_for_mult_div -> .)
    DIFERENTE       reduce using rule 77 (check_for_mult_div -> .)
    COMA            reduce using rule 77 (check_for_mult_div -> .)
    PARENDER        reduce using rule 77 (check_for_mult_div -> .)
    PUNTOCOMA       reduce using rule 77 (check_for_mult_div -> .)

    check_for_mult_div             shift and go to state 101

state 73

    (84) factor -> MINUS . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    factor_1                       shift and go to state 102
    cte                            shift and go to state 76

state 74

    (86) factor -> factor_1 . push_to_pilaO
    (57) push_to_pilaO -> .

    MULT            reduce using rule 57 (push_to_pilaO -> .)
    DIV             reduce using rule 57 (push_to_pilaO -> .)
    MINUS           reduce using rule 57 (push_to_pilaO -> .)
    PLUS            reduce using rule 57 (push_to_pilaO -> .)
    MENORQUE        reduce using rule 57 (push_to_pilaO -> .)
    MAYORQUE        reduce using rule 57 (push_to_pilaO -> .)
    DIFERENTE       reduce using rule 57 (push_to_pilaO -> .)
    COMA            reduce using rule 57 (push_to_pilaO -> .)
    PARENDER        reduce using rule 57 (push_to_pilaO -> .)
    PUNTOCOMA       reduce using rule 57 (push_to_pilaO -> .)

    push_to_pilaO                  shift and go to state 103

state 75

    (85) factor -> PLUS . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    factor_1                       shift and go to state 104
    cte                            shift and go to state 76

state 76

    (88) factor_1 -> cte .

    MULT            reduce using rule 88 (factor_1 -> cte .)
    DIV             reduce using rule 88 (factor_1 -> cte .)
    MINUS           reduce using rule 88 (factor_1 -> cte .)
    PLUS            reduce using rule 88 (factor_1 -> cte .)
    MENORQUE        reduce using rule 88 (factor_1 -> cte .)
    MAYORQUE        reduce using rule 88 (factor_1 -> cte .)
    DIFERENTE       reduce using rule 88 (factor_1 -> cte .)
    COMA            reduce using rule 88 (factor_1 -> cte .)
    PARENDER        reduce using rule 88 (factor_1 -> cte .)
    PUNTOCOMA       reduce using rule 88 (factor_1 -> cte .)


state 77

    (89) cte -> CTE_INT .

    MULT            reduce using rule 89 (cte -> CTE_INT .)
    DIV             reduce using rule 89 (cte -> CTE_INT .)
    MINUS           reduce using rule 89 (cte -> CTE_INT .)
    PLUS            reduce using rule 89 (cte -> CTE_INT .)
    MENORQUE        reduce using rule 89 (cte -> CTE_INT .)
    MAYORQUE        reduce using rule 89 (cte -> CTE_INT .)
    DIFERENTE       reduce using rule 89 (cte -> CTE_INT .)
    COMA            reduce using rule 89 (cte -> CTE_INT .)
    PARENDER        reduce using rule 89 (cte -> CTE_INT .)
    PUNTOCOMA       reduce using rule 89 (cte -> CTE_INT .)


state 78

    (90) cte -> CTE_FLOAT .

    MULT            reduce using rule 90 (cte -> CTE_FLOAT .)
    DIV             reduce using rule 90 (cte -> CTE_FLOAT .)
    MINUS           reduce using rule 90 (cte -> CTE_FLOAT .)
    PLUS            reduce using rule 90 (cte -> CTE_FLOAT .)
    MENORQUE        reduce using rule 90 (cte -> CTE_FLOAT .)
    MAYORQUE        reduce using rule 90 (cte -> CTE_FLOAT .)
    DIFERENTE       reduce using rule 90 (cte -> CTE_FLOAT .)
    COMA            reduce using rule 90 (cte -> CTE_FLOAT .)
    PARENDER        reduce using rule 90 (cte -> CTE_FLOAT .)
    PUNTOCOMA       reduce using rule 90 (cte -> CTE_FLOAT .)


state 79

    (41) condition -> IF PARENIZQ expresion . PARENDER check_if body else PUNTOCOMA fill_if

    PARENDER        shift and go to state 105


state 80

    (47) cycle -> DO check_while body . WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while

    WHILE           shift and go to state 106


state 81

    (49) print -> PRINT PARENIZQ printable . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 107


state 82

    (53) printable -> push_print . CTE_STRING push_string check_for_print printable_1
    (54) printable -> push_print . expresion check_for_print printable_1
    (67) expresion -> . exp expresion_1
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 108
    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion                      shift and go to state 109
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 83

    (28) params_1 -> ID . DOSPUNTOS type parameter_declaration params_cycle

    DOSPUNTOS       shift and go to state 110


state 84

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params . PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA

    PARENDER        shift and go to state 111


state 85

    (25) params -> params_1 .

    PARENDER        reduce using rule 25 (params -> params_1 .)


state 86

    (26) params -> empty .

    PARENDER        reduce using rule 26 (params -> empty .)


state 87

    (11) vars_1 -> id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1 .

    VOID            reduce using rule 11 (vars_1 -> id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1 .)
    MAIN            reduce using rule 11 (vars_1 -> id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1 .)
    CORCHETEIZQ     reduce using rule 11 (vars_1 -> id DOSPUNTOS type PUNTOCOMA assign_type_to_vars vars_1 .)


state 88

    (61) assign -> ID check_variable push_to_pilaO IGUAL . push_operator expresion check_for_assign PUNTOCOMA
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 112

state 89

    (87) factor_1 -> ID check_variable .

    MULT            reduce using rule 87 (factor_1 -> ID check_variable .)
    DIV             reduce using rule 87 (factor_1 -> ID check_variable .)
    MINUS           reduce using rule 87 (factor_1 -> ID check_variable .)
    PLUS            reduce using rule 87 (factor_1 -> ID check_variable .)
    MENORQUE        reduce using rule 87 (factor_1 -> ID check_variable .)
    MAYORQUE        reduce using rule 87 (factor_1 -> ID check_variable .)
    DIFERENTE       reduce using rule 87 (factor_1 -> ID check_variable .)
    COMA            reduce using rule 87 (factor_1 -> ID check_variable .)
    PARENDER        reduce using rule 87 (factor_1 -> ID check_variable .)
    PUNTOCOMA       reduce using rule 87 (factor_1 -> ID check_variable .)


state 90

    (83) factor -> PARENIZQ push_operator . expresion PARENDER pop_par
    (67) expresion -> . exp expresion_1
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion                      shift and go to state 113
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 91

    (48) f_call -> ID PARENIZQ expresion_opt PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 114


state 92

    (62) expresion_opt -> expresion expresion_cycle .

    PARENDER        reduce using rule 62 (expresion_opt -> expresion expresion_cycle .)


state 93

    (64) expresion_cycle -> COMA . expresion_opt
    (62) expresion_opt -> . expresion expresion_cycle
    (63) expresion_opt -> . empty
    (67) expresion -> . exp expresion_1
    (91) empty -> .
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENDER        reduce using rule 91 (empty -> .)
    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion_opt                  shift and go to state 115
    expresion                      shift and go to state 68
    empty                          shift and go to state 69
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 94

    (65) expresion_cycle -> empty .

    PARENDER        reduce using rule 65 (expresion_cycle -> empty .)


state 95

    (67) expresion -> exp expresion_1 .

    COMA            reduce using rule 67 (expresion -> exp expresion_1 .)
    PARENDER        reduce using rule 67 (expresion -> exp expresion_1 .)
    PUNTOCOMA       reduce using rule 67 (expresion -> exp expresion_1 .)


state 96

    (68) expresion_1 -> MENORQUE . push_operator exp check_for_expresion
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 116

state 97

    (69) expresion_1 -> MAYORQUE . push_operator exp check_for_expresion
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 117

state 98

    (70) expresion_1 -> DIFERENTE . push_operator exp check_for_expresion
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 118

state 99

    (71) expresion_1 -> empty .

    COMA            reduce using rule 71 (expresion_1 -> empty .)
    PARENDER        reduce using rule 71 (expresion_1 -> empty .)
    PUNTOCOMA       reduce using rule 71 (expresion_1 -> empty .)


state 100

    (73) exp -> termino check_for_plus_minus . exp_1
    (74) exp_1 -> . MINUS push_operator exp
    (75) exp_1 -> . PLUS push_operator exp
    (76) exp_1 -> . empty
    (91) empty -> .

    MINUS           shift and go to state 120
    PLUS            shift and go to state 121
    MENORQUE        reduce using rule 91 (empty -> .)
    MAYORQUE        reduce using rule 91 (empty -> .)
    DIFERENTE       reduce using rule 91 (empty -> .)
    COMA            reduce using rule 91 (empty -> .)
    PARENDER        reduce using rule 91 (empty -> .)
    PUNTOCOMA       reduce using rule 91 (empty -> .)

    exp_1                          shift and go to state 119
    empty                          shift and go to state 122

state 101

    (78) termino -> factor check_for_mult_div . termino_1
    (79) termino_1 -> . MULT push_operator termino
    (80) termino_1 -> . DIV push_operator termino
    (81) termino_1 -> . empty
    (91) empty -> .

    MULT            shift and go to state 124
    DIV             shift and go to state 125
    MINUS           reduce using rule 91 (empty -> .)
    PLUS            reduce using rule 91 (empty -> .)
    MENORQUE        reduce using rule 91 (empty -> .)
    MAYORQUE        reduce using rule 91 (empty -> .)
    DIFERENTE       reduce using rule 91 (empty -> .)
    COMA            reduce using rule 91 (empty -> .)
    PARENDER        reduce using rule 91 (empty -> .)
    PUNTOCOMA       reduce using rule 91 (empty -> .)

    termino_1                      shift and go to state 123
    empty                          shift and go to state 126

state 102

    (84) factor -> MINUS factor_1 . push_to_pilaO
    (57) push_to_pilaO -> .

    MULT            reduce using rule 57 (push_to_pilaO -> .)
    DIV             reduce using rule 57 (push_to_pilaO -> .)
    MINUS           reduce using rule 57 (push_to_pilaO -> .)
    PLUS            reduce using rule 57 (push_to_pilaO -> .)
    MENORQUE        reduce using rule 57 (push_to_pilaO -> .)
    MAYORQUE        reduce using rule 57 (push_to_pilaO -> .)
    DIFERENTE       reduce using rule 57 (push_to_pilaO -> .)
    COMA            reduce using rule 57 (push_to_pilaO -> .)
    PARENDER        reduce using rule 57 (push_to_pilaO -> .)
    PUNTOCOMA       reduce using rule 57 (push_to_pilaO -> .)

    push_to_pilaO                  shift and go to state 127

state 103

    (86) factor -> factor_1 push_to_pilaO .

    MULT            reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    DIV             reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    MINUS           reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    PLUS            reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    MENORQUE        reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    MAYORQUE        reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    DIFERENTE       reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    COMA            reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    PARENDER        reduce using rule 86 (factor -> factor_1 push_to_pilaO .)
    PUNTOCOMA       reduce using rule 86 (factor -> factor_1 push_to_pilaO .)


state 104

    (85) factor -> PLUS factor_1 . push_to_pilaO
    (57) push_to_pilaO -> .

    MULT            reduce using rule 57 (push_to_pilaO -> .)
    DIV             reduce using rule 57 (push_to_pilaO -> .)
    MINUS           reduce using rule 57 (push_to_pilaO -> .)
    PLUS            reduce using rule 57 (push_to_pilaO -> .)
    MENORQUE        reduce using rule 57 (push_to_pilaO -> .)
    MAYORQUE        reduce using rule 57 (push_to_pilaO -> .)
    DIFERENTE       reduce using rule 57 (push_to_pilaO -> .)
    COMA            reduce using rule 57 (push_to_pilaO -> .)
    PARENDER        reduce using rule 57 (push_to_pilaO -> .)
    PUNTOCOMA       reduce using rule 57 (push_to_pilaO -> .)

    push_to_pilaO                  shift and go to state 128

state 105

    (41) condition -> IF PARENIZQ expresion PARENDER . check_if body else PUNTOCOMA fill_if
    (39) check_if -> .

    CORCHETEIZQ     reduce using rule 39 (check_if -> .)

    check_if                       shift and go to state 129

state 106

    (47) cycle -> DO check_while body WHILE . PARENIZQ expresion PARENDER PUNTOCOMA fill_while

    PARENIZQ        shift and go to state 130


state 107

    (49) print -> PRINT PARENIZQ printable PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 131


state 108

    (53) printable -> push_print CTE_STRING . push_string check_for_print printable_1
    (51) push_string -> .

    COMA            reduce using rule 51 (push_string -> .)
    PARENDER        reduce using rule 51 (push_string -> .)

    push_string                    shift and go to state 132

state 109

    (54) printable -> push_print expresion . check_for_print printable_1
    (52) check_for_print -> .

    COMA            reduce using rule 52 (check_for_print -> .)
    PARENDER        reduce using rule 52 (check_for_print -> .)

    check_for_print                shift and go to state 133

state 110

    (28) params_1 -> ID DOSPUNTOS . type parameter_declaration params_cycle
    (18) type -> . INT change_curr_type
    (19) type -> . FLOAT change_curr_type

    INT             shift and go to state 31
    FLOAT           shift and go to state 32

    type                           shift and go to state 134

state 111

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER . BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA

    BRACKETIZQ      shift and go to state 135


state 112

    (61) assign -> ID check_variable push_to_pilaO IGUAL push_operator . expresion check_for_assign PUNTOCOMA
    (67) expresion -> . exp expresion_1
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion                      shift and go to state 136
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 113

    (83) factor -> PARENIZQ push_operator expresion . PARENDER pop_par

    PARENDER        shift and go to state 137


state 114

    (48) f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA .

    ID              reduce using rule 48 (f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA .)
    IF              reduce using rule 48 (f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA .)
    DO              reduce using rule 48 (f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 48 (f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA .)
    CORCHETEDER     reduce using rule 48 (f_call -> ID PARENIZQ expresion_opt PARENDER PUNTOCOMA .)


state 115

    (64) expresion_cycle -> COMA expresion_opt .

    PARENDER        reduce using rule 64 (expresion_cycle -> COMA expresion_opt .)


state 116

    (68) expresion_1 -> MENORQUE push_operator . exp check_for_expresion
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    exp                            shift and go to state 138
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 117

    (69) expresion_1 -> MAYORQUE push_operator . exp check_for_expresion
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    exp                            shift and go to state 139
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 118

    (70) expresion_1 -> DIFERENTE push_operator . exp check_for_expresion
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    exp                            shift and go to state 140
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 119

    (73) exp -> termino check_for_plus_minus exp_1 .

    MENORQUE        reduce using rule 73 (exp -> termino check_for_plus_minus exp_1 .)
    MAYORQUE        reduce using rule 73 (exp -> termino check_for_plus_minus exp_1 .)
    DIFERENTE       reduce using rule 73 (exp -> termino check_for_plus_minus exp_1 .)
    COMA            reduce using rule 73 (exp -> termino check_for_plus_minus exp_1 .)
    PARENDER        reduce using rule 73 (exp -> termino check_for_plus_minus exp_1 .)
    PUNTOCOMA       reduce using rule 73 (exp -> termino check_for_plus_minus exp_1 .)


state 120

    (74) exp_1 -> MINUS . push_operator exp
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 141

state 121

    (75) exp_1 -> PLUS . push_operator exp
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 142

state 122

    (76) exp_1 -> empty .

    MENORQUE        reduce using rule 76 (exp_1 -> empty .)
    MAYORQUE        reduce using rule 76 (exp_1 -> empty .)
    DIFERENTE       reduce using rule 76 (exp_1 -> empty .)
    COMA            reduce using rule 76 (exp_1 -> empty .)
    PARENDER        reduce using rule 76 (exp_1 -> empty .)
    PUNTOCOMA       reduce using rule 76 (exp_1 -> empty .)


state 123

    (78) termino -> factor check_for_mult_div termino_1 .

    MINUS           reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    PLUS            reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    MENORQUE        reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    MAYORQUE        reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    DIFERENTE       reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    COMA            reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    PARENDER        reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)
    PUNTOCOMA       reduce using rule 78 (termino -> factor check_for_mult_div termino_1 .)


state 124

    (79) termino_1 -> MULT . push_operator termino
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 143

state 125

    (80) termino_1 -> DIV . push_operator termino
    (58) push_operator -> .

    PARENIZQ        reduce using rule 58 (push_operator -> .)
    MINUS           reduce using rule 58 (push_operator -> .)
    PLUS            reduce using rule 58 (push_operator -> .)
    ID              reduce using rule 58 (push_operator -> .)
    CTE_INT         reduce using rule 58 (push_operator -> .)
    CTE_FLOAT       reduce using rule 58 (push_operator -> .)

    push_operator                  shift and go to state 144

state 126

    (81) termino_1 -> empty .

    MINUS           reduce using rule 81 (termino_1 -> empty .)
    PLUS            reduce using rule 81 (termino_1 -> empty .)
    MENORQUE        reduce using rule 81 (termino_1 -> empty .)
    MAYORQUE        reduce using rule 81 (termino_1 -> empty .)
    DIFERENTE       reduce using rule 81 (termino_1 -> empty .)
    COMA            reduce using rule 81 (termino_1 -> empty .)
    PARENDER        reduce using rule 81 (termino_1 -> empty .)
    PUNTOCOMA       reduce using rule 81 (termino_1 -> empty .)


state 127

    (84) factor -> MINUS factor_1 push_to_pilaO .

    MULT            reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    DIV             reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    MINUS           reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    PLUS            reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    MENORQUE        reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    MAYORQUE        reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    DIFERENTE       reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    COMA            reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    PARENDER        reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)
    PUNTOCOMA       reduce using rule 84 (factor -> MINUS factor_1 push_to_pilaO .)


state 128

    (85) factor -> PLUS factor_1 push_to_pilaO .

    MULT            reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    DIV             reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    MINUS           reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    PLUS            reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    MENORQUE        reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    MAYORQUE        reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    DIFERENTE       reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    COMA            reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    PARENDER        reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)
    PUNTOCOMA       reduce using rule 85 (factor -> PLUS factor_1 push_to_pilaO .)


state 129

    (41) condition -> IF PARENIZQ expresion PARENDER check_if . body else PUNTOCOMA fill_if
    (31) body -> . CORCHETEIZQ statement_opt CORCHETEDER

    CORCHETEIZQ     shift and go to state 28

    body                           shift and go to state 145

state 130

    (47) cycle -> DO check_while body WHILE PARENIZQ . expresion PARENDER PUNTOCOMA fill_while
    (67) expresion -> . exp expresion_1
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    expresion                      shift and go to state 146
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 131

    (49) print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA .

    ID              reduce using rule 49 (print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA .)
    IF              reduce using rule 49 (print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA .)
    DO              reduce using rule 49 (print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 49 (print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA .)
    CORCHETEDER     reduce using rule 49 (print -> PRINT PARENIZQ printable PARENDER PUNTOCOMA .)


state 132

    (53) printable -> push_print CTE_STRING push_string . check_for_print printable_1
    (52) check_for_print -> .

    COMA            reduce using rule 52 (check_for_print -> .)
    PARENDER        reduce using rule 52 (check_for_print -> .)

    check_for_print                shift and go to state 147

state 133

    (54) printable -> push_print expresion check_for_print . printable_1
    (55) printable_1 -> . COMA printable
    (56) printable_1 -> . empty
    (91) empty -> .

    COMA            shift and go to state 149
    PARENDER        reduce using rule 91 (empty -> .)

    printable_1                    shift and go to state 148
    empty                          shift and go to state 150

state 134

    (28) params_1 -> ID DOSPUNTOS type . parameter_declaration params_cycle
    (27) parameter_declaration -> .

    COMA            reduce using rule 27 (parameter_declaration -> .)
    PARENDER        reduce using rule 27 (parameter_declaration -> .)

    parameter_declaration          shift and go to state 151

state 135

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ . vars_opt body BRACKETDER PUNTOCOMA
    (6) vars_opt -> . vars
    (7) vars_opt -> . empty
    (9) vars -> . VAR tabla_variables_global vars_1
    (91) empty -> .

    VAR             shift and go to state 10
    CORCHETEIZQ     reduce using rule 91 (empty -> .)

    vars_opt                       shift and go to state 152
    vars                           shift and go to state 8
    empty                          shift and go to state 9

state 136

    (61) assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion . check_for_assign PUNTOCOMA
    (59) check_for_assign -> .

    PUNTOCOMA       reduce using rule 59 (check_for_assign -> .)

    check_for_assign               shift and go to state 153

state 137

    (83) factor -> PARENIZQ push_operator expresion PARENDER . pop_par
    (82) pop_par -> .

    MULT            reduce using rule 82 (pop_par -> .)
    DIV             reduce using rule 82 (pop_par -> .)
    MINUS           reduce using rule 82 (pop_par -> .)
    PLUS            reduce using rule 82 (pop_par -> .)
    MENORQUE        reduce using rule 82 (pop_par -> .)
    MAYORQUE        reduce using rule 82 (pop_par -> .)
    DIFERENTE       reduce using rule 82 (pop_par -> .)
    COMA            reduce using rule 82 (pop_par -> .)
    PARENDER        reduce using rule 82 (pop_par -> .)
    PUNTOCOMA       reduce using rule 82 (pop_par -> .)

    pop_par                        shift and go to state 154

state 138

    (68) expresion_1 -> MENORQUE push_operator exp . check_for_expresion
    (66) check_for_expresion -> .

    COMA            reduce using rule 66 (check_for_expresion -> .)
    PARENDER        reduce using rule 66 (check_for_expresion -> .)
    PUNTOCOMA       reduce using rule 66 (check_for_expresion -> .)

    check_for_expresion            shift and go to state 155

state 139

    (69) expresion_1 -> MAYORQUE push_operator exp . check_for_expresion
    (66) check_for_expresion -> .

    COMA            reduce using rule 66 (check_for_expresion -> .)
    PARENDER        reduce using rule 66 (check_for_expresion -> .)
    PUNTOCOMA       reduce using rule 66 (check_for_expresion -> .)

    check_for_expresion            shift and go to state 156

state 140

    (70) expresion_1 -> DIFERENTE push_operator exp . check_for_expresion
    (66) check_for_expresion -> .

    COMA            reduce using rule 66 (check_for_expresion -> .)
    PARENDER        reduce using rule 66 (check_for_expresion -> .)
    PUNTOCOMA       reduce using rule 66 (check_for_expresion -> .)

    check_for_expresion            shift and go to state 157

state 141

    (74) exp_1 -> MINUS push_operator . exp
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    exp                            shift and go to state 158
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 142

    (75) exp_1 -> PLUS push_operator . exp
    (73) exp -> . termino check_for_plus_minus exp_1
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    exp                            shift and go to state 159
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 143

    (79) termino_1 -> MULT push_operator . termino
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    termino                        shift and go to state 160
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 144

    (80) termino_1 -> DIV push_operator . termino
    (78) termino -> . factor check_for_mult_div termino_1
    (83) factor -> . PARENIZQ push_operator expresion PARENDER pop_par
    (84) factor -> . MINUS factor_1 push_to_pilaO
    (85) factor -> . PLUS factor_1 push_to_pilaO
    (86) factor -> . factor_1 push_to_pilaO
    (87) factor_1 -> . ID check_variable
    (88) factor_1 -> . cte
    (89) cte -> . CTE_INT
    (90) cte -> . CTE_FLOAT

    PARENIZQ        shift and go to state 66
    MINUS           shift and go to state 73
    PLUS            shift and go to state 75
    ID              shift and go to state 65
    CTE_INT         shift and go to state 77
    CTE_FLOAT       shift and go to state 78

    termino                        shift and go to state 161
    factor                         shift and go to state 72
    factor_1                       shift and go to state 74
    cte                            shift and go to state 76

state 145

    (41) condition -> IF PARENIZQ expresion PARENDER check_if body . else PUNTOCOMA fill_if
    (43) else -> . ELSE fill_else body
    (44) else -> . empty
    (91) empty -> .

    ELSE            shift and go to state 163
    PUNTOCOMA       reduce using rule 91 (empty -> .)

    else                           shift and go to state 162
    empty                          shift and go to state 164

state 146

    (47) cycle -> DO check_while body WHILE PARENIZQ expresion . PARENDER PUNTOCOMA fill_while

    PARENDER        shift and go to state 165


state 147

    (53) printable -> push_print CTE_STRING push_string check_for_print . printable_1
    (55) printable_1 -> . COMA printable
    (56) printable_1 -> . empty
    (91) empty -> .

    COMA            shift and go to state 149
    PARENDER        reduce using rule 91 (empty -> .)

    printable_1                    shift and go to state 166
    empty                          shift and go to state 150

state 148

    (54) printable -> push_print expresion check_for_print printable_1 .

    PARENDER        reduce using rule 54 (printable -> push_print expresion check_for_print printable_1 .)


state 149

    (55) printable_1 -> COMA . printable
    (53) printable -> . push_print CTE_STRING push_string check_for_print printable_1
    (54) printable -> . push_print expresion check_for_print printable_1
    (50) push_print -> .

    CTE_STRING      reduce using rule 50 (push_print -> .)
    PARENIZQ        reduce using rule 50 (push_print -> .)
    MINUS           reduce using rule 50 (push_print -> .)
    PLUS            reduce using rule 50 (push_print -> .)
    ID              reduce using rule 50 (push_print -> .)
    CTE_INT         reduce using rule 50 (push_print -> .)
    CTE_FLOAT       reduce using rule 50 (push_print -> .)

    printable                      shift and go to state 167
    push_print                     shift and go to state 82

state 150

    (56) printable_1 -> empty .

    PARENDER        reduce using rule 56 (printable_1 -> empty .)


state 151

    (28) params_1 -> ID DOSPUNTOS type parameter_declaration . params_cycle
    (29) params_cycle -> . COMA params_1
    (30) params_cycle -> . empty
    (91) empty -> .

    COMA            shift and go to state 169
    PARENDER        reduce using rule 91 (empty -> .)

    params_cycle                   shift and go to state 168
    empty                          shift and go to state 170

state 152

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt . body BRACKETDER PUNTOCOMA
    (31) body -> . CORCHETEIZQ statement_opt CORCHETEDER

    CORCHETEIZQ     shift and go to state 28

    body                           shift and go to state 171

state 153

    (61) assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign . PUNTOCOMA

    PUNTOCOMA       shift and go to state 172


state 154

    (83) factor -> PARENIZQ push_operator expresion PARENDER pop_par .

    MULT            reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    DIV             reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    MINUS           reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    PLUS            reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    MENORQUE        reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    MAYORQUE        reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    DIFERENTE       reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    COMA            reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    PARENDER        reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)
    PUNTOCOMA       reduce using rule 83 (factor -> PARENIZQ push_operator expresion PARENDER pop_par .)


state 155

    (68) expresion_1 -> MENORQUE push_operator exp check_for_expresion .

    COMA            reduce using rule 68 (expresion_1 -> MENORQUE push_operator exp check_for_expresion .)
    PARENDER        reduce using rule 68 (expresion_1 -> MENORQUE push_operator exp check_for_expresion .)
    PUNTOCOMA       reduce using rule 68 (expresion_1 -> MENORQUE push_operator exp check_for_expresion .)


state 156

    (69) expresion_1 -> MAYORQUE push_operator exp check_for_expresion .

    COMA            reduce using rule 69 (expresion_1 -> MAYORQUE push_operator exp check_for_expresion .)
    PARENDER        reduce using rule 69 (expresion_1 -> MAYORQUE push_operator exp check_for_expresion .)
    PUNTOCOMA       reduce using rule 69 (expresion_1 -> MAYORQUE push_operator exp check_for_expresion .)


state 157

    (70) expresion_1 -> DIFERENTE push_operator exp check_for_expresion .

    COMA            reduce using rule 70 (expresion_1 -> DIFERENTE push_operator exp check_for_expresion .)
    PARENDER        reduce using rule 70 (expresion_1 -> DIFERENTE push_operator exp check_for_expresion .)
    PUNTOCOMA       reduce using rule 70 (expresion_1 -> DIFERENTE push_operator exp check_for_expresion .)


state 158

    (74) exp_1 -> MINUS push_operator exp .

    MENORQUE        reduce using rule 74 (exp_1 -> MINUS push_operator exp .)
    MAYORQUE        reduce using rule 74 (exp_1 -> MINUS push_operator exp .)
    DIFERENTE       reduce using rule 74 (exp_1 -> MINUS push_operator exp .)
    COMA            reduce using rule 74 (exp_1 -> MINUS push_operator exp .)
    PARENDER        reduce using rule 74 (exp_1 -> MINUS push_operator exp .)
    PUNTOCOMA       reduce using rule 74 (exp_1 -> MINUS push_operator exp .)


state 159

    (75) exp_1 -> PLUS push_operator exp .

    MENORQUE        reduce using rule 75 (exp_1 -> PLUS push_operator exp .)
    MAYORQUE        reduce using rule 75 (exp_1 -> PLUS push_operator exp .)
    DIFERENTE       reduce using rule 75 (exp_1 -> PLUS push_operator exp .)
    COMA            reduce using rule 75 (exp_1 -> PLUS push_operator exp .)
    PARENDER        reduce using rule 75 (exp_1 -> PLUS push_operator exp .)
    PUNTOCOMA       reduce using rule 75 (exp_1 -> PLUS push_operator exp .)


state 160

    (79) termino_1 -> MULT push_operator termino .

    MINUS           reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    PLUS            reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    MENORQUE        reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    MAYORQUE        reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    DIFERENTE       reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    COMA            reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    PARENDER        reduce using rule 79 (termino_1 -> MULT push_operator termino .)
    PUNTOCOMA       reduce using rule 79 (termino_1 -> MULT push_operator termino .)


state 161

    (80) termino_1 -> DIV push_operator termino .

    MINUS           reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    PLUS            reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    MENORQUE        reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    MAYORQUE        reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    DIFERENTE       reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    COMA            reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    PARENDER        reduce using rule 80 (termino_1 -> DIV push_operator termino .)
    PUNTOCOMA       reduce using rule 80 (termino_1 -> DIV push_operator termino .)


state 162

    (41) condition -> IF PARENIZQ expresion PARENDER check_if body else . PUNTOCOMA fill_if

    PUNTOCOMA       shift and go to state 173


state 163

    (43) else -> ELSE . fill_else body
    (42) fill_else -> .

    CORCHETEIZQ     reduce using rule 42 (fill_else -> .)

    fill_else                      shift and go to state 174

state 164

    (44) else -> empty .

    PUNTOCOMA       reduce using rule 44 (else -> empty .)


state 165

    (47) cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER . PUNTOCOMA fill_while

    PUNTOCOMA       shift and go to state 175


state 166

    (53) printable -> push_print CTE_STRING push_string check_for_print printable_1 .

    PARENDER        reduce using rule 53 (printable -> push_print CTE_STRING push_string check_for_print printable_1 .)


state 167

    (55) printable_1 -> COMA printable .

    PARENDER        reduce using rule 55 (printable_1 -> COMA printable .)


state 168

    (28) params_1 -> ID DOSPUNTOS type parameter_declaration params_cycle .

    PARENDER        reduce using rule 28 (params_1 -> ID DOSPUNTOS type parameter_declaration params_cycle .)


state 169

    (29) params_cycle -> COMA . params_1
    (28) params_1 -> . ID DOSPUNTOS type parameter_declaration params_cycle

    ID              shift and go to state 83

    params_1                       shift and go to state 176

state 170

    (30) params_cycle -> empty .

    PARENDER        reduce using rule 30 (params_cycle -> empty .)


state 171

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body . BRACKETDER PUNTOCOMA

    BRACKETDER      shift and go to state 177


state 172

    (61) assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA .

    ID              reduce using rule 61 (assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA .)
    IF              reduce using rule 61 (assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA .)
    DO              reduce using rule 61 (assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA .)
    PRINT           reduce using rule 61 (assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA .)
    CORCHETEDER     reduce using rule 61 (assign -> ID check_variable push_to_pilaO IGUAL push_operator expresion check_for_assign PUNTOCOMA .)


state 173

    (41) condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA . fill_if
    (40) fill_if -> .

    ID              reduce using rule 40 (fill_if -> .)
    IF              reduce using rule 40 (fill_if -> .)
    DO              reduce using rule 40 (fill_if -> .)
    PRINT           reduce using rule 40 (fill_if -> .)
    CORCHETEDER     reduce using rule 40 (fill_if -> .)

    fill_if                        shift and go to state 178

state 174

    (43) else -> ELSE fill_else . body
    (31) body -> . CORCHETEIZQ statement_opt CORCHETEDER

    CORCHETEIZQ     shift and go to state 28

    body                           shift and go to state 179

state 175

    (47) cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA . fill_while
    (46) fill_while -> .

    ID              reduce using rule 46 (fill_while -> .)
    IF              reduce using rule 46 (fill_while -> .)
    DO              reduce using rule 46 (fill_while -> .)
    PRINT           reduce using rule 46 (fill_while -> .)
    CORCHETEDER     reduce using rule 46 (fill_while -> .)

    fill_while                     shift and go to state 180

state 176

    (29) params_cycle -> COMA params_1 .

    PARENDER        reduce using rule 29 (params_cycle -> COMA params_1 .)


state 177

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 181


state 178

    (41) condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if .

    ID              reduce using rule 41 (condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if .)
    IF              reduce using rule 41 (condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if .)
    DO              reduce using rule 41 (condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if .)
    PRINT           reduce using rule 41 (condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if .)
    CORCHETEDER     reduce using rule 41 (condition -> IF PARENIZQ expresion PARENDER check_if body else PUNTOCOMA fill_if .)


state 179

    (43) else -> ELSE fill_else body .

    PUNTOCOMA       reduce using rule 43 (else -> ELSE fill_else body .)


state 180

    (47) cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while .

    ID              reduce using rule 47 (cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while .)
    IF              reduce using rule 47 (cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while .)
    DO              reduce using rule 47 (cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while .)
    PRINT           reduce using rule 47 (cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while .)
    CORCHETEDER     reduce using rule 47 (cycle -> DO check_while body WHILE PARENIZQ expresion PARENDER PUNTOCOMA fill_while .)


state 181

    (24) funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA .

    VOID            reduce using rule 24 (funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA .)
    MAIN            reduce using rule 24 (funcs -> VOID change_curr_type ID new_function PARENIZQ create_func_var_table params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA .)

