
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBRACKETDER BRACKETIZQ COMA COMILLAS CORCHETEDER CORCHETEIZQ CTE_FLOAT CTE_INT CTE_STRING DIV DO DOSPUNTOS ELSE END EXCLAMACION FLOAT ID IF IGUAL INT MAIN MAYORQUE MENORQUE MINUS MULT PARENDER PARENIZQ PLUS PRINT PROGRAM PUNTO PUNTOCOMA VAR VOID WHILEprogram : PROGRAM ID PUNTOCOMA vars_opt funcs_opt MAIN body ENDvars_opt : vars \n    | emptyvars : VAR vars_1vars_1 : id DOSPUNTOS type PUNTOCOMA \n    | emptyid : ID id_1id_1 : COMA id\n    | emptytype : INT\n    | FLOATfuncs_opt : funcs funcs_opt\n    | emptyfuncs : VOID ID PARENIZQ params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMAparams : params_1\n    | emptyparams_1 : ID DOSPUNTOS type params_cycleparams_cycle : COMA params_1\n    | emptybody : CORCHETEIZQ statement_opt CORCHETEDERstatement_opt : statement statement_opt\n    | emptystatement : assignassign : id IGUAL expresionexpresion : idempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,8,12,16,21,22,23,25,26,30,33,35,44,47,48,52,],[3,16,19,-26,-7,16,-9,16,37,-8,16,-23,16,-25,-24,37,]),'PUNTOCOMA':([3,27,28,29,57,],[4,41,-10,-11,58,]),'VAR':([4,50,],[8,8,]),'VOID':([4,5,6,7,8,10,13,15,41,58,],[-26,12,-2,-3,-26,12,-4,-6,-5,-14,]),'MAIN':([4,5,6,7,8,9,10,11,13,15,18,41,58,],[-26,-26,-2,-3,-26,17,-26,-13,-4,-6,-12,-5,-14,]),'CORCHETEIZQ':([6,7,8,13,15,17,41,50,54,],[-2,-3,-26,-4,-6,25,-5,-26,25,]),'DOSPUNTOS':([14,16,21,23,30,37,],[20,-26,-7,-9,-8,45,]),'COMA':([16,28,29,49,],[22,-10,-11,52,]),'IGUAL':([16,21,23,30,36,],[-26,-7,-9,-8,44,]),'CORCHETEDER':([16,21,23,25,30,32,33,34,35,43,47,48,],[-26,-7,-9,-26,-8,42,-26,-22,-23,-21,-25,-24,]),'PARENIZQ':([19,],[26,]),'INT':([20,45,],[28,28,]),'FLOAT':([20,45,],[29,29,]),'END':([24,42,],[31,-20,]),'PARENDER':([26,28,29,38,39,40,49,51,53,55,],[-26,-10,-11,46,-15,-16,-26,-17,-19,-18,]),'BRACKETDER':([42,56,],[-20,57,]),'BRACKETIZQ':([46,],[50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars_opt':([4,50,],[5,54,]),'vars':([4,50,],[6,6,]),'empty':([4,5,8,10,16,25,26,33,49,50,],[7,11,15,11,23,34,40,34,53,7,]),'funcs_opt':([5,10,],[9,18,]),'funcs':([5,10,],[10,10,]),'vars_1':([8,],[13,]),'id':([8,22,25,33,44,],[14,30,36,36,47,]),'id_1':([16,],[21,]),'body':([17,54,],[24,56,]),'type':([20,45,],[27,49,]),'statement_opt':([25,33,],[32,43,]),'statement':([25,33,],[33,33,]),'assign':([25,33,],[35,35,]),'params':([26,],[38,]),'params_1':([26,52,],[39,55,]),'expresion':([44,],[48,]),'params_cycle':([49,],[51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNTOCOMA vars_opt funcs_opt MAIN body END','program',8,'p_program','parser_.py',6),
  ('vars_opt -> vars','vars_opt',1,'p_vars_opt','parser_.py',10),
  ('vars_opt -> empty','vars_opt',1,'p_vars_opt','parser_.py',11),
  ('vars -> VAR vars_1','vars',2,'p_vars','parser_.py',18),
  ('vars_1 -> id DOSPUNTOS type PUNTOCOMA','vars_1',4,'p_vars_1','parser_.py',22),
  ('vars_1 -> empty','vars_1',1,'p_vars_1','parser_.py',23),
  ('id -> ID id_1','id',2,'p_id','parser_.py',30),
  ('id_1 -> COMA id','id_1',2,'p_id_1','parser_.py',34),
  ('id_1 -> empty','id_1',1,'p_id_1','parser_.py',35),
  ('type -> INT','type',1,'p_type','parser_.py',42),
  ('type -> FLOAT','type',1,'p_type','parser_.py',43),
  ('funcs_opt -> funcs funcs_opt','funcs_opt',2,'p_funcs_opt','parser_.py',47),
  ('funcs_opt -> empty','funcs_opt',1,'p_funcs_opt','parser_.py',48),
  ('funcs -> VOID ID PARENIZQ params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA','funcs',10,'p_funcs','parser_.py',55),
  ('params -> params_1','params',1,'p_params','parser_.py',59),
  ('params -> empty','params',1,'p_params','parser_.py',60),
  ('params_1 -> ID DOSPUNTOS type params_cycle','params_1',4,'p_params_1','parser_.py',67),
  ('params_cycle -> COMA params_1','params_cycle',2,'p_params_cycle','parser_.py',71),
  ('params_cycle -> empty','params_cycle',1,'p_params_cycle','parser_.py',72),
  ('body -> CORCHETEIZQ statement_opt CORCHETEDER','body',3,'p_body','parser_.py',79),
  ('statement_opt -> statement statement_opt','statement_opt',2,'p_statement_opt','parser_.py',83),
  ('statement_opt -> empty','statement_opt',1,'p_statement_opt','parser_.py',84),
  ('statement -> assign','statement',1,'p_statement','parser_.py',90),
  ('assign -> id IGUAL expresion','assign',3,'p_assign','parser_.py',94),
  ('expresion -> id','expresion',1,'p_expresion','parser_.py',98),
  ('empty -> <empty>','empty',0,'p_empty','parser_.py',102),
]
