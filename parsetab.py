
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBRACKETDER BRACKETIZQ COMA COMILLAS CORCHETEDER CORCHETEIZQ CTE_FLOAT CTE_INT CTE_STRING DIV DO DOSPUNTOS ELSE END EXCLAMACION FLOAT ID IF IGUAL INT MAIN MAYORQUE MENORQUE MINUS MULT PARENDER PARENIZQ PLUS PRINT PROGRAM PUNTO PUNTOCOMA VAR VOID WHILEprogram : PROGRAM ID PUNTOCOMA vars_opt funcs_opt MAIN body ENDvars_opt : vars \n    | emptyvars : VAR vars_1vars_1 : id DOSPUNTOS type PUNTOCOMA \n    | emptyid : ID id_1id_1 : COMA id\n    | emptytype : INT\n    | FLOATfuncs_opt : funcs funcs_opt\n    | emptyfuncs : VOID ID PARENIZQ params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMAparams : params_1\n    | emptyparams_1 : ID DOSPUNTOS type params_cycleparams_cycle : COMA params_1\n    | emptybody : CORCHETEIZQ statement_opt CORCHETEDERstatement_opt : statement statement_opt\n    | emptystatement : assign\n    | conditionassign : exp IGUAL expresioncondition : IF PARENIZQ expresion PARENDER body elseelse : ELSE body\n    | emptyexpresion : exp expresion_1expresion_1 : MENORQUE exp\n    | MAYORQUE exp\n    | EXCLAMACION IGUAL exp\n    | emptyexp : termino exp_1exp_1 : MINUS exp\n    | PLUS exp\n    | emptytermino : factor termino_1termino_1 : MULT termino\n    | DIV termino\n    | emptyfactor : PARENIZQ expresion PARENDER\n    | MINUS factor_1\n    | PLUS factor_1\n    | factor_1factor_1 : ID\n    | ctecte : CTE_INT\n    | CTE_FLOATempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,8,12,22,25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,77,79,80,81,82,83,87,88,89,91,94,95,98,100,102,],[3,16,19,16,45,49,45,-23,-24,45,-50,-50,45,-45,45,-46,-47,-48,-49,-20,45,45,-50,-34,45,45,-37,-38,45,45,-41,-43,-44,-25,-42,-29,45,45,-33,-35,-36,-39,-40,-30,-31,45,49,-50,-32,-26,-28,-27,]),'PUNTOCOMA':([3,27,28,29,101,],[4,53,-10,-11,103,]),'VAR':([4,85,],[8,8,]),'VOID':([4,5,6,7,8,10,13,15,53,103,],[-50,12,-2,-3,-50,12,-4,-6,-5,-14,]),'MAIN':([4,5,6,7,8,9,10,11,13,15,18,53,103,],[-50,-50,-2,-3,-50,17,-50,-13,-4,-6,-12,-5,-14,]),'CORCHETEIZQ':([6,7,8,13,15,17,53,85,86,93,99,],[-2,-3,-50,-4,-6,25,-5,-50,25,25,25,]),'DOSPUNTOS':([14,16,21,23,30,49,],[20,-50,-7,-9,-8,70,]),'COMA':([16,28,29,84,],[22,-10,-11,91,]),'PARENIZQ':([19,25,33,35,36,38,39,40,41,43,45,46,47,48,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,77,79,80,81,82,83,87,88,89,94,95,98,100,102,],[26,39,39,-23,-24,57,39,-50,-50,-45,-46,-47,-48,-49,-20,39,39,-50,-34,39,39,-37,-38,39,39,-41,-43,-44,-25,-42,-29,39,39,-33,-35,-36,-39,-40,-30,-31,39,-50,-32,-26,-28,-27,]),'INT':([20,70,],[28,28,]),'FLOAT':([20,70,],[29,29,]),'END':([24,54,],[31,-20,]),'CORCHETEDER':([25,32,33,34,35,36,40,41,43,45,46,47,48,54,55,59,60,63,64,67,68,69,72,74,75,79,80,81,82,83,87,88,94,95,98,100,102,],[-50,54,-50,-22,-23,-24,-50,-50,-45,-46,-47,-48,-49,-20,-21,-50,-34,-37,-38,-41,-43,-44,-25,-42,-29,-33,-35,-36,-39,-40,-30,-31,-50,-32,-26,-28,-27,]),'IF':([25,33,35,36,40,41,43,45,46,47,48,54,59,60,63,64,67,68,69,72,74,75,79,80,81,82,83,87,88,94,95,98,100,102,],[38,38,-23,-24,-50,-50,-45,-46,-47,-48,-49,-20,-50,-34,-37,-38,-41,-43,-44,-25,-42,-29,-33,-35,-36,-39,-40,-30,-31,-50,-32,-26,-28,-27,]),'MINUS':([25,33,35,36,39,40,41,43,45,46,47,48,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,77,79,80,81,82,83,87,88,89,94,95,98,100,102,],[42,42,-23,-24,42,61,-50,-45,-46,-47,-48,-49,-20,42,42,-50,-34,42,42,-37,-38,42,42,-41,-43,-44,-25,-42,-29,42,42,-33,-35,-36,-39,-40,-30,-31,42,-50,-32,-26,-28,-27,]),'PLUS':([25,33,35,36,39,40,41,43,45,46,47,48,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,77,79,80,81,82,83,87,88,89,94,95,98,100,102,],[44,44,-23,-24,44,62,-50,-45,-46,-47,-48,-49,-20,44,44,-50,-34,44,44,-37,-38,44,44,-41,-43,-44,-25,-42,-29,44,44,-33,-35,-36,-39,-40,-30,-31,44,-50,-32,-26,-28,-27,]),'CTE_INT':([25,33,35,36,39,40,41,42,43,44,45,46,47,48,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,77,79,80,81,82,83,87,88,89,94,95,98,100,102,],[47,47,-23,-24,47,-50,-50,47,-45,47,-46,-47,-48,-49,-20,47,47,-50,-34,47,47,-37,-38,47,47,-41,-43,-44,-25,-42,-29,47,47,-33,-35,-36,-39,-40,-30,-31,47,-50,-32,-26,-28,-27,]),'CTE_FLOAT':([25,33,35,36,39,40,41,42,43,44,45,46,47,48,54,56,57,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,77,79,80,81,82,83,87,88,89,94,95,98,100,102,],[48,48,-23,-24,48,-50,-50,48,-45,48,-46,-47,-48,-49,-20,48,48,-50,-34,48,48,-37,-38,48,48,-41,-43,-44,-25,-42,-29,48,48,-33,-35,-36,-39,-40,-30,-31,48,-50,-32,-26,-28,-27,]),'PARENDER':([26,28,29,40,41,43,45,46,47,48,50,51,52,58,59,60,63,64,67,68,69,73,74,75,79,80,81,82,83,84,87,88,90,92,95,96,],[-50,-10,-11,-50,-50,-45,-46,-47,-48,-49,71,-15,-16,74,-50,-34,-37,-38,-41,-43,-44,86,-42,-29,-33,-35,-36,-39,-40,-50,-30,-31,-17,-19,-32,-18,]),'IGUAL':([37,40,41,43,45,46,47,48,60,63,64,67,68,69,74,78,80,81,82,83,],[56,-50,-50,-45,-46,-47,-48,-49,-34,-37,-38,-41,-43,-44,-42,89,-35,-36,-39,-40,]),'MENORQUE':([40,41,43,45,46,47,48,59,60,63,64,67,68,69,74,80,81,82,83,],[-50,-50,-45,-46,-47,-48,-49,76,-34,-37,-38,-41,-43,-44,-42,-35,-36,-39,-40,]),'MAYORQUE':([40,41,43,45,46,47,48,59,60,63,64,67,68,69,74,80,81,82,83,],[-50,-50,-45,-46,-47,-48,-49,77,-34,-37,-38,-41,-43,-44,-42,-35,-36,-39,-40,]),'EXCLAMACION':([40,41,43,45,46,47,48,59,60,63,64,67,68,69,74,80,81,82,83,],[-50,-50,-45,-46,-47,-48,-49,78,-34,-37,-38,-41,-43,-44,-42,-35,-36,-39,-40,]),'MULT':([41,43,45,46,47,48,68,69,74,],[65,-45,-46,-47,-48,-49,-43,-44,-42,]),'DIV':([41,43,45,46,47,48,68,69,74,],[66,-45,-46,-47,-48,-49,-43,-44,-42,]),'ELSE':([54,94,],[-20,99,]),'BRACKETDER':([54,97,],[-20,101,]),'BRACKETIZQ':([71,],[85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars_opt':([4,85,],[5,93,]),'vars':([4,85,],[6,6,]),'empty':([4,5,8,10,16,25,26,33,40,41,59,84,85,94,],[7,11,15,11,23,34,52,34,63,67,79,92,7,100,]),'funcs_opt':([5,10,],[9,18,]),'funcs':([5,10,],[10,10,]),'vars_1':([8,],[13,]),'id':([8,22,],[14,30,]),'id_1':([16,],[21,]),'body':([17,86,93,99,],[24,94,97,102,]),'type':([20,70,],[27,84,]),'statement_opt':([25,33,],[32,55,]),'statement':([25,33,],[33,33,]),'assign':([25,33,],[35,35,]),'condition':([25,33,],[36,36,]),'exp':([25,33,39,56,57,61,62,76,77,89,],[37,37,59,59,59,80,81,87,88,95,]),'termino':([25,33,39,56,57,61,62,65,66,76,77,89,],[40,40,40,40,40,40,40,82,83,40,40,40,]),'factor':([25,33,39,56,57,61,62,65,66,76,77,89,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'factor_1':([25,33,39,42,44,56,57,61,62,65,66,76,77,89,],[43,43,43,68,69,43,43,43,43,43,43,43,43,43,]),'cte':([25,33,39,42,44,56,57,61,62,65,66,76,77,89,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'params':([26,],[50,]),'params_1':([26,91,],[51,96,]),'expresion':([39,56,57,],[58,72,73,]),'exp_1':([40,],[60,]),'termino_1':([41,],[64,]),'expresion_1':([59,],[75,]),'params_cycle':([84,],[90,]),'else':([94,],[98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNTOCOMA vars_opt funcs_opt MAIN body END','program',8,'p_program','parser_.py',6),
  ('vars_opt -> vars','vars_opt',1,'p_vars_opt','parser_.py',10),
  ('vars_opt -> empty','vars_opt',1,'p_vars_opt','parser_.py',11),
  ('vars -> VAR vars_1','vars',2,'p_vars','parser_.py',18),
  ('vars_1 -> id DOSPUNTOS type PUNTOCOMA','vars_1',4,'p_vars_1','parser_.py',22),
  ('vars_1 -> empty','vars_1',1,'p_vars_1','parser_.py',23),
  ('id -> ID id_1','id',2,'p_id','parser_.py',30),
  ('id_1 -> COMA id','id_1',2,'p_id_1','parser_.py',34),
  ('id_1 -> empty','id_1',1,'p_id_1','parser_.py',35),
  ('type -> INT','type',1,'p_type','parser_.py',42),
  ('type -> FLOAT','type',1,'p_type','parser_.py',43),
  ('funcs_opt -> funcs funcs_opt','funcs_opt',2,'p_funcs_opt','parser_.py',47),
  ('funcs_opt -> empty','funcs_opt',1,'p_funcs_opt','parser_.py',48),
  ('funcs -> VOID ID PARENIZQ params PARENDER BRACKETIZQ vars_opt body BRACKETDER PUNTOCOMA','funcs',10,'p_funcs','parser_.py',55),
  ('params -> params_1','params',1,'p_params','parser_.py',59),
  ('params -> empty','params',1,'p_params','parser_.py',60),
  ('params_1 -> ID DOSPUNTOS type params_cycle','params_1',4,'p_params_1','parser_.py',67),
  ('params_cycle -> COMA params_1','params_cycle',2,'p_params_cycle','parser_.py',71),
  ('params_cycle -> empty','params_cycle',1,'p_params_cycle','parser_.py',72),
  ('body -> CORCHETEIZQ statement_opt CORCHETEDER','body',3,'p_body','parser_.py',79),
  ('statement_opt -> statement statement_opt','statement_opt',2,'p_statement_opt','parser_.py',83),
  ('statement_opt -> empty','statement_opt',1,'p_statement_opt','parser_.py',84),
  ('statement -> assign','statement',1,'p_statement','parser_.py',90),
  ('statement -> condition','statement',1,'p_statement','parser_.py',91),
  ('assign -> exp IGUAL expresion','assign',3,'p_assign','parser_.py',95),
  ('condition -> IF PARENIZQ expresion PARENDER body else','condition',6,'p_condition','parser_.py',99),
  ('else -> ELSE body','else',2,'p_else','parser_.py',103),
  ('else -> empty','else',1,'p_else','parser_.py',104),
  ('expresion -> exp expresion_1','expresion',2,'p_expresion','parser_.py',111),
  ('expresion_1 -> MENORQUE exp','expresion_1',2,'p_expresion_1','parser_.py',115),
  ('expresion_1 -> MAYORQUE exp','expresion_1',2,'p_expresion_1','parser_.py',116),
  ('expresion_1 -> EXCLAMACION IGUAL exp','expresion_1',3,'p_expresion_1','parser_.py',117),
  ('expresion_1 -> empty','expresion_1',1,'p_expresion_1','parser_.py',118),
  ('exp -> termino exp_1','exp',2,'p_exp','parser_.py',128),
  ('exp_1 -> MINUS exp','exp_1',2,'p_exp_1','parser_.py',132),
  ('exp_1 -> PLUS exp','exp_1',2,'p_exp_1','parser_.py',133),
  ('exp_1 -> empty','exp_1',1,'p_exp_1','parser_.py',134),
  ('termino -> factor termino_1','termino',2,'p_termino','parser_.py',141),
  ('termino_1 -> MULT termino','termino_1',2,'p_termino_1','parser_.py',145),
  ('termino_1 -> DIV termino','termino_1',2,'p_termino_1','parser_.py',146),
  ('termino_1 -> empty','termino_1',1,'p_termino_1','parser_.py',147),
  ('factor -> PARENIZQ expresion PARENDER','factor',3,'p_factor','parser_.py',154),
  ('factor -> MINUS factor_1','factor',2,'p_factor','parser_.py',155),
  ('factor -> PLUS factor_1','factor',2,'p_factor','parser_.py',156),
  ('factor -> factor_1','factor',1,'p_factor','parser_.py',157),
  ('factor_1 -> ID','factor_1',1,'p_factor_1','parser_.py',166),
  ('factor_1 -> cte','factor_1',1,'p_factor_1','parser_.py',167),
  ('cte -> CTE_INT','cte',1,'p_cte','parser_.py',171),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','parser_.py',172),
  ('empty -> <empty>','empty',0,'p_empty','parser_.py',178),
]
